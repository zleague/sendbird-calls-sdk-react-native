{"version":3,"sources":["DirectCall.ts"],"names":["Platform","ControllableModuleType","RouteChangeReason","Logger","CallsEvent","DirectCallEventType","DirectCall","poolRelease","pool","get","binder","props","callId","directCall","_updateInternal","constructor","emit","event","args","_internalEvents","forEach","listener","add","push","index","indexOf","info","unsubscribes","disposeInternal","disposeNative","_binder","addListener","DIRECT_CALL","type","data","additionalData","ON_ESTABLISHED","onEstablished","ON_CONNECTED","onConnected","ON_RECONNECTING","onReconnecting","ON_RECONNECTED","onReconnected","ON_ENDED","onEnded","ON_REMOTE_AUDIO_SETTINGS_CHANGED","onRemoteAudioSettingsChanged","ON_REMOTE_VIDEO_SETTINGS_CHANGED","onRemoteVideoSettingsChanged","ON_LOCAL_VIDEO_SETTINGS_CHANGED","onLocalVideoSettingsChanged","ON_REMOTE_RECORDING_STATUS_CHANGED","onRemoteRecordingStatusChanged","ON_CUSTOM_ITEMS_UPDATED","onCustomItemsUpdated","updatedKeys","ON_CUSTOM_ITEMS_DELETED","onCustomItemsDeleted","deletedKeys","ON_USER_HOLD_STATUS_CHANGED","onUserHoldStatusChanged","isLocalUser","isUserOnHold","ON_AUDIO_DEVICE_CHANGED","OS","onAudioDeviceChanged","platform","currentAudioDevice","availableAudioDevices","reason","unknown","currentRoute","inputs","outputs","previousRoute","fn","options","audioEnabled","frontCamera","videoEnabled","holdActiveCall","nativeModule","accept","end","device","selectVideoDevice","selectAudioDevice","muteMicrophone","_props","isLocalAudioEnabled","unmuteMicrophone","startVideo","isLocalVideoEnabled","stopVideo","switchCamera","videoViewId","updateLocalVideoView","updateRemoteVideoView","ios_callUUID","android_availableAudioDevices","android_currentAudioDevice","availableVideoDevices","callLog","callee","caller","currentVideoDevice","customItems","startedAt","duration","Math","max","Date","now","endedBy","isEnded","isLocalScreenShareEnabled","isOnHold","isOngoing","isRemoteAudioEnabled","isRemoteVideoEnabled","isVideoCall","localRecordingStatus","localUser","myRole","remoteRecordingStatus","remoteUser","endResult"],"mappings":"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","sourcesContent":["import { Platform } from 'react-native';\n\nimport type {\n  AudioDevice,\n  CallOptions,\n  DirectCallListener,\n  DirectCallMethods,\n  DirectCallProperties,\n  VideoDevice,\n} from '../types';\nimport { ControllableModuleType, RouteChangeReason } from '../types';\nimport { Logger } from '../utils/logger';\nimport type NativeBinder from './NativeBinder';\nimport { CallsEvent, DirectCallEventType } from './NativeBinder';\n\nexport class DirectCall implements DirectCallProperties, DirectCallMethods {\n  /** @internal **/\n  private static pool: Record<string, DirectCall> = {};\n\n  /** @internal **/\n  public static poolRelease() {\n    DirectCall.pool = {};\n  }\n\n  /** @internal **/\n  public static get(binder: NativeBinder, props: DirectCallProperties) {\n    if (!DirectCall.pool[props.callId]) DirectCall.pool[props.callId] = new DirectCall(binder, props);\n    const directCall = DirectCall.pool[props.callId];\n    return directCall._updateInternal(props);\n  }\n\n  constructor(binder: NativeBinder, props: DirectCallProperties) {\n    this._binder = binder;\n    this._props = props;\n  }\n\n  private _binder: NativeBinder;\n  private _props: DirectCallProperties;\n  private _internalEvents = {\n    pool: [] as Partial<DirectCallListener>[],\n    emit: (event: keyof DirectCallListener, ...args: unknown[]) => {\n      // @ts-ignore\n      this._internalEvents.pool.forEach((listener) => listener[event]?.(...args));\n    },\n    add: (listener: Partial<DirectCallListener>) => {\n      this._internalEvents.pool.push(listener);\n      return () => {\n        const index = this._internalEvents.pool.indexOf(listener);\n        if (index > -1) delete this._internalEvents.pool[index];\n      };\n    },\n  };\n  private _updateInternal(props: DirectCallProperties) {\n    this._props = props;\n    return this;\n  }\n\n  public get ios_callUUID() {\n    return this._props.ios_callUUID;\n  }\n  public get android_availableAudioDevices() {\n    return this._props.android_availableAudioDevices;\n  }\n  public get android_currentAudioDevice() {\n    return this._props.android_currentAudioDevice;\n  }\n  public get availableVideoDevices() {\n    return this._props.availableVideoDevices;\n  }\n  public get callId() {\n    return this._props.callId;\n  }\n  public get callLog() {\n    return this._props.callLog;\n  }\n  public get callee() {\n    return this._props.callee;\n  }\n  public get caller() {\n    return this._props.caller;\n  }\n  public get currentVideoDevice() {\n    return this._props.currentVideoDevice;\n  }\n  public get customItems() {\n    return this._props.customItems;\n  }\n  public get startedAt() {\n    return this._props.startedAt;\n  }\n  public get duration() {\n    if (this.startedAt > 0) {\n      return Math.max(0, Date.now() - this.startedAt);\n    } else if (this._props.duration > 0) {\n      return this._props.duration;\n    } else {\n      return 0;\n    }\n  }\n  public get endedBy() {\n    return this._props.endedBy;\n  }\n  public get isEnded() {\n    return this._props.isEnded;\n  }\n  public get isLocalAudioEnabled() {\n    return this._props.isLocalAudioEnabled;\n  }\n  public get isLocalScreenShareEnabled() {\n    return this._props.isLocalScreenShareEnabled;\n  }\n  public get isLocalVideoEnabled() {\n    return this._props.isLocalVideoEnabled;\n  }\n  public get isOnHold() {\n    return this._props.isOnHold;\n  }\n  public get isOngoing() {\n    return this._props.isOngoing;\n  }\n  public get isRemoteAudioEnabled() {\n    return this._props.isRemoteAudioEnabled;\n  }\n  public get isRemoteVideoEnabled() {\n    return this._props.isRemoteVideoEnabled;\n  }\n  public get isVideoCall() {\n    return this._props.isVideoCall;\n  }\n  public get localRecordingStatus() {\n    return this._props.localRecordingStatus;\n  }\n  public get localUser() {\n    return this._props.localUser;\n  }\n  public get myRole() {\n    return this._props.myRole;\n  }\n  public get remoteRecordingStatus() {\n    return this._props.remoteRecordingStatus;\n  }\n  public get remoteUser() {\n    return this._props.remoteUser;\n  }\n  public get endResult() {\n    return this._props.endResult;\n  }\n\n  /**\n   * Add DirectCall listener.\n   * supports multiple listeners.\n   *\n   * @since 1.0.0\n   */\n  public addListener = (listener: Partial<DirectCallListener>) => {\n    Logger.info('[DirectCall]', 'addListener', this.callId);\n\n    const unsubscribes: Array<() => void> = [];\n\n    const disposeInternal = this._internalEvents.add(listener);\n    const disposeNative = this._binder.addListener(CallsEvent.DIRECT_CALL, ({ type, data, additionalData }) => {\n      if (data.callId !== this.callId) return;\n\n      this._updateInternal(data);\n      switch (type) {\n        case DirectCallEventType.ON_ESTABLISHED: {\n          listener.onEstablished?.(this);\n          break;\n        }\n        case DirectCallEventType.ON_CONNECTED: {\n          listener.onConnected?.(this);\n          break;\n        }\n        case DirectCallEventType.ON_RECONNECTING: {\n          listener.onReconnecting?.(this);\n          break;\n        }\n        case DirectCallEventType.ON_RECONNECTED: {\n          listener.onReconnected?.(this);\n          break;\n        }\n        case DirectCallEventType.ON_ENDED: {\n          listener.onEnded?.(this);\n          break;\n        }\n        case DirectCallEventType.ON_REMOTE_AUDIO_SETTINGS_CHANGED: {\n          listener.onRemoteAudioSettingsChanged?.(this);\n          break;\n        }\n        case DirectCallEventType.ON_REMOTE_VIDEO_SETTINGS_CHANGED: {\n          listener.onRemoteVideoSettingsChanged?.(this);\n          break;\n        }\n        case DirectCallEventType.ON_LOCAL_VIDEO_SETTINGS_CHANGED: {\n          listener.onLocalVideoSettingsChanged?.(this);\n          break;\n        }\n        case DirectCallEventType.ON_REMOTE_RECORDING_STATUS_CHANGED: {\n          listener.onRemoteRecordingStatusChanged?.(this);\n          break;\n        }\n        case DirectCallEventType.ON_CUSTOM_ITEMS_UPDATED: {\n          listener.onCustomItemsUpdated?.(this, additionalData?.updatedKeys ?? []);\n          break;\n        }\n        case DirectCallEventType.ON_CUSTOM_ITEMS_DELETED: {\n          listener.onCustomItemsDeleted?.(this, additionalData?.deletedKeys ?? []);\n          break;\n        }\n        case DirectCallEventType.ON_USER_HOLD_STATUS_CHANGED: {\n          listener.onUserHoldStatusChanged?.(\n            this,\n            additionalData?.isLocalUser ?? false,\n            additionalData?.isUserOnHold ?? false,\n          );\n          break;\n        }\n        case DirectCallEventType.ON_AUDIO_DEVICE_CHANGED: {\n          if (Platform.OS === 'android') {\n            listener.onAudioDeviceChanged?.(this, {\n              platform: 'android',\n              data: {\n                currentAudioDevice: additionalData?.currentAudioDevice ?? null,\n                availableAudioDevices: additionalData?.availableAudioDevices ?? [],\n              },\n            });\n          }\n          if (Platform.OS === 'ios') {\n            listener.onAudioDeviceChanged?.(this, {\n              platform: 'ios',\n              data: {\n                reason: additionalData?.reason ?? RouteChangeReason.unknown,\n                currentRoute: additionalData?.currentRoute ?? { inputs: [], outputs: [] },\n                previousRoute: additionalData?.previousRoute ?? { inputs: [], outputs: [] },\n              },\n            });\n          }\n          break;\n        }\n      }\n    });\n\n    unsubscribes.push(disposeNative, disposeInternal);\n    return () => unsubscribes.forEach((fn) => fn());\n  };\n\n  /**\n   * Accepts call.\n   *\n   * @since 1.0.0\n   */\n  public accept = async (\n    options: CallOptions = { audioEnabled: true, frontCamera: true, videoEnabled: true },\n    holdActiveCall = false,\n  ) => {\n    await this._binder.nativeModule.accept(this.callId, options, holdActiveCall);\n  };\n\n  /**\n   * Ends the call.\n   * {@link DirectCallListener.onEnded} will be called after successful ending.\n   * This listener will also be called when the remote user ends the call.\n   *\n   * @since 1.0.0\n   */\n  public end = async () => {\n    await this._binder.nativeModule.end(this.callId);\n  };\n\n  /**\n   * Selects video device.\n   * Changes current video device asynchronously.\n   *\n   * @since 1.0.0\n   */\n  public selectVideoDevice = async (device: VideoDevice) => {\n    await this._binder.nativeModule.selectVideoDevice(ControllableModuleType.DIRECT_CALL, this.callId, device);\n  };\n\n  /**\n   * Selects audio device.\n   *\n   * @platform Android\n   * @since 1.0.0\n   */\n  public android_selectAudioDevice = async (device: AudioDevice) => {\n    await this._binder.nativeModule.selectAudioDevice(ControllableModuleType.DIRECT_CALL, this.callId, device);\n  };\n\n  /**\n   * Mutes the audio of local user.\n   * Will trigger {@link DirectCallListener.onRemoteAudioSettingsChanged} method of the remote user.\n   * If the remote user changes their audio settings, local user will be notified via same delegate method.\n   *\n   * @since 1.0.0\n   */\n  public muteMicrophone = () => {\n    this._binder.nativeModule.muteMicrophone(ControllableModuleType.DIRECT_CALL, this.callId);\n\n    // NOTE: native doesn't have onLocalAudioSettingsChanged event\n    this._props.isLocalAudioEnabled = false;\n    this._internalEvents.emit('onPropertyUpdatedManually', this);\n  };\n\n  /**\n   * Unmutes the audio of local user.\n   * Will trigger {@link DirectCallListener.onRemoteAudioSettingsChanged} method of the remote user.\n   * If the remote user changes their audio settings, local user will be notified via same delegate method.\n   *\n   * @since 1.0.0\n   */\n  public unmuteMicrophone = () => {\n    this._binder.nativeModule.unmuteMicrophone(ControllableModuleType.DIRECT_CALL, this.callId);\n\n    // NOTE: native doesn't have onLocalAudioSettingsChanged event\n    this._props.isLocalAudioEnabled = true;\n    this._internalEvents.emit('onPropertyUpdatedManually', this);\n  };\n\n  /**\n   * Starts local video.\n   * If the callee changes video settings,\n   * the caller is notified via the {@link DirectCallListener.onRemoteVideoSettingsChanged} listener.\n   *\n   * @since 1.0.0\n   */\n  public startVideo = () => {\n    this._binder.nativeModule.startVideo(ControllableModuleType.DIRECT_CALL, this.callId);\n    this._props.isLocalVideoEnabled = true;\n\n    // NOTE: ios native doesn't have onLocalAudioSettingsChanged event\n    Platform.OS === 'ios' && this._internalEvents.emit('onLocalVideoSettingsChanged', this);\n  };\n\n  /**\n   * Stops local video.\n   * If the callee changes video settings,\n   * the caller is notified via the {@link DirectCallListener.onRemoteVideoSettingsChanged} listener.\n   *\n   * @since 1.0.0\n   */\n  public stopVideo = () => {\n    this._binder.nativeModule.stopVideo(ControllableModuleType.DIRECT_CALL, this.callId);\n    this._props.isLocalVideoEnabled = false;\n\n    // NOTE: ios native doesn't have onLocalAudioSettingsChanged event\n    Platform.OS === 'ios' && this._internalEvents.emit('onLocalVideoSettingsChanged', this);\n  };\n\n  /**\n   * Toggles the selection between the front and the back camera.\n   *\n   * on Android, In case of more than two cameras, the next camera will be selected.\n   * If the last camera is already selected, the first one will be selected again.\n   *\n   * @since 1.0.0\n   */\n  public switchCamera = async () => {\n    await this._binder.nativeModule.switchCamera(ControllableModuleType.DIRECT_CALL, this.callId);\n  };\n\n  /**\n   * Update local video view.\n   * @see DirectCallVideoView.videoViewId\n   *\n   * @since 1.0.0\n   */\n  public updateLocalVideoView = (videoViewId: number) => {\n    this._binder.nativeModule.updateLocalVideoView(this.callId, videoViewId);\n  };\n\n  /**\n   * Update remote video view.\n   * @see DirectCallVideoView.videoViewId\n   *\n   * @since 1.0.0\n   */\n  public updateRemoteVideoView = (videoViewId: number) => {\n    this._binder.nativeModule.updateRemoteVideoView(this.callId, videoViewId);\n  };\n}\n"]}