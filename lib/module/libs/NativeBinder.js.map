{"version":3,"sources":["NativeBinder.ts"],"names":["NativeEventEmitter","NativeModules","LINKING_ERROR","convertDirectCallPropsNTJ","convertGroupCallPropsNTJ","Logger","JSEventEmitter","MODULE_NAME","NativeModule","NoopModuleProxy","Proxy","get","Error","CallsEvent","DefaultEventType","DirectCallEventType","GroupCallEventType","NativeBinder","nativeModule","_nativeModule","jsEventEmitter","_jsEventEmitter","constructor","DEFAULT","DIRECT_CALL","GROUP_CALL","_supportedNativeEvents","forEach","event","info","_nativeEventEmitter","addListener","eventType","data","additionalData","roomId","callId","JSON","stringify","slice","join","emit","type","eventName","callback"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport { NativeEventEmitter, NativeModules } from 'react-native';\n\nimport type { AsNativeInterface, DirectCallProperties, RoomProperties, SendbirdCallsNativeSpec } from '../types';\nimport { LINKING_ERROR } from '../utils/constants';\nimport { convertDirectCallPropsNTJ, convertGroupCallPropsNTJ } from '../utils/converter';\nimport { Logger } from '../utils/logger';\nimport JSEventEmitter from './JSEventEmitter';\n\nconst MODULE_NAME = 'RNSendbirdCalls';\nconst NativeModule = NativeModules[MODULE_NAME]; //TurboModuleRegistry.get<SendbirdCallsSpec>(MODULE_NAME);\n\nconst NoopModuleProxy = new Proxy(\n  {},\n  {\n    get() {\n      throw new Error(LINKING_ERROR);\n    },\n  },\n);\n\nexport enum CallsEvent {\n  DEFAULT = 'sendbird.call.default',\n  DIRECT_CALL = 'sendbird.call.direct',\n  GROUP_CALL = 'sendbird.call.group',\n}\n\nexport enum DefaultEventType {\n  ON_RINGING = 'sendbird.call.default.onRinging',\n}\n\nexport enum DirectCallEventType {\n  ON_ESTABLISHED = 'sendbird.call.direct.onEstablished',\n  ON_CONNECTED = 'sendbird.call.direct.onConnected',\n  ON_RECONNECTING = 'sendbird.call.direct.onReconnecting',\n  ON_RECONNECTED = 'sendbird.call.direct.onReconnected',\n  ON_ENDED = 'sendbird.call.direct.onEnded',\n  ON_REMOTE_AUDIO_SETTINGS_CHANGED = 'sendbird.call.direct.onRemoteAudioSettingsChanged',\n  ON_REMOTE_VIDEO_SETTINGS_CHANGED = 'sendbird.call.direct.onRemoteVideoSettingsChanged',\n  ON_LOCAL_VIDEO_SETTINGS_CHANGED = 'sendbird.call.direct.onLocalVideoSettingsChanged',\n  ON_REMOTE_RECORDING_STATUS_CHANGED = 'sendbird.call.direct.onRemoteRecordingStatusChanged',\n  ON_AUDIO_DEVICE_CHANGED = 'sendbird.call.direct.onAudioDeviceChanged',\n  ON_CUSTOM_ITEMS_UPDATED = 'sendbird.call.direct.onCustomItemsUpdated',\n  ON_CUSTOM_ITEMS_DELETED = 'sendbird.call.direct.onCustomItemsDeleted',\n  ON_USER_HOLD_STATUS_CHANGED = 'sendbird.call.direct.onUserHoldStatusChanged',\n}\n\nexport enum GroupCallEventType {\n  ON_DELETED = 'sendbird.call.group.onDeleted',\n  ON_ERROR = 'sendbird.call.group.onError',\n  ON_REMOTE_PARTICIPANT_ENTERED = 'sendbird.call.group.onRemoteParticipantEntered',\n  ON_REMOTE_PARTICIPANT_EXITED = 'sendbird.call.group.onRemoteParticipantExited',\n  ON_REMOTE_PARTICIPANT_STREAM_STARTED = 'sendbird.call.group.onRemoteParticipantStreamStarted',\n  ON_AUDIO_DEVICE_CHANGED = 'sendbird.call.group.onAudioDeviceChanged',\n  ON_REMOTE_VIDEO_SETTINGS_CHANGED = 'sendbird.call.group.onRemoteVideoSettingsChanged',\n  ON_REMOTE_AUDIO_SETTINGS_CHANGED = 'sendbird.call.group.onRemoteAudioSettingsChanged',\n  ON_CUSTOM_ITEMS_UPDATED = 'sendbird.call.group.onCustomItemsUpdated',\n  ON_CUSTOM_ITEMS_DELETED = 'sendbird.call.group.onCustomItemsDeleted',\n}\n\ntype MakeEventUnionMember<Type, Data> = {\n  eventType: Type;\n  data: AsNativeInterface<Data>;\n  convertedData: Data;\n  additionalData?: Record<string, any>;\n};\n\ntype EventUnion =\n  | MakeEventUnionMember<DefaultEventType, DirectCallProperties>\n  | MakeEventUnionMember<DirectCallEventType, DirectCallProperties>\n  | MakeEventUnionMember<GroupCallEventType, RoomProperties>;\n\ntype EventType = EventUnion['eventType'];\ntype ExtractData<T extends EventType, U extends EventUnion = EventUnion> = U extends { eventType: T }\n  ? U['convertedData']\n  : never;\n\nexport default class NativeBinder {\n  private _nativeModule: SendbirdCallsNativeSpec = NativeModule ?? NoopModuleProxy;\n  private _nativeEventEmitter = new NativeEventEmitter(this._nativeModule);\n  private _jsEventEmitter = new JSEventEmitter();\n  private _supportedNativeEvents = [CallsEvent.DEFAULT, CallsEvent.DIRECT_CALL, CallsEvent.GROUP_CALL];\n\n  public get nativeModule() {\n    return this._nativeModule;\n  }\n  public get jsEventEmitter() {\n    return this._jsEventEmitter;\n  }\n\n  constructor() {\n    /* for reduce redundant native event listeners */\n    this._supportedNativeEvents.forEach((event) => {\n      Logger.info('[NativeBinder] Add native event listener:', event);\n\n      // Native -> JS\n      this._nativeEventEmitter.addListener(\n        event,\n        ({ eventType, data, additionalData }: Omit<EventUnion, 'convertedData'>) => {\n          Logger.info(\n            '[NativeBinder] Receive events from native module: ',\n            [\n              event,\n              eventType,\n              event === CallsEvent.GROUP_CALL\n                ? (data as AsNativeInterface<RoomProperties>).roomId\n                : (data as AsNativeInterface<DirectCallProperties>).callId,\n              additionalData && JSON.stringify(additionalData).slice(0, 30) + '...',\n            ].join(' ++ '),\n          );\n\n          if (event === CallsEvent.DIRECT_CALL || event === CallsEvent.DEFAULT) {\n            this.jsEventEmitter.emit(event, {\n              type: eventType,\n              data: convertDirectCallPropsNTJ(data as AsNativeInterface<DirectCallProperties>),\n              additionalData,\n            });\n          }\n\n          if (event === CallsEvent.GROUP_CALL) {\n            this.jsEventEmitter.emit(event, {\n              type: eventType,\n              data: convertGroupCallPropsNTJ(data as AsNativeInterface<RoomProperties>),\n              additionalData,\n            });\n          }\n        },\n      );\n    });\n  }\n\n  public addListener(eventName: CallsEvent.DEFAULT, callback: EventCallback<DefaultEventType>): () => void;\n  public addListener(eventName: CallsEvent.DIRECT_CALL, callback: EventCallback<DirectCallEventType>): () => void;\n  public addListener(eventName: CallsEvent.GROUP_CALL, callback: EventCallback<GroupCallEventType>): () => void;\n  public addListener(eventName: string, callback: (event: any) => void) {\n    Logger.info('[NativeBinder] Add javascript event listener:', eventName);\n    return this.jsEventEmitter.addListener(eventName, callback);\n  }\n}\n\ntype EventCallback<T extends EventType> = (data: {\n  type: T;\n  data: ExtractData<T>;\n  additionalData?: Record<string, any>;\n}) => void;\n"]}