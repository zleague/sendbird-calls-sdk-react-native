{"version":3,"sources":["Media.ts"],"names":["SoundType","AudioDeviceType","VideoDevicePosition","RecordingStatus","RecordingType"],"mappings":"AAQA,WAAYA,SAAZ;;WAAYA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;GAAAA,S,KAAAA,S;;AAOZ,WAAYC,eAAZ;;WAAYA,e;AAAAA,EAAAA,e;AAAAA,EAAAA,e;AAAAA,EAAAA,e;AAAAA,EAAAA,e;GAAAA,e,KAAAA,e;;AAOZ,WAAYC,mBAAZ;;WAAYA,mB;AAAAA,EAAAA,mB;AAAAA,EAAAA,mB;AAAAA,EAAAA,mB;GAAAA,mB,KAAAA,mB;;AAMZ,WAAYC,eAAZ;;WAAYA,e;AAAAA,EAAAA,e;AAAAA,EAAAA,e;GAAAA,e,KAAAA,e;;AAKZ,WAAYC,aAAZ;;WAAYA,a;AAAAA,EAAAA,a;AAAAA,EAAAA,a;AAAAA,EAAAA,a;AAAAA,EAAAA,a;AAAAA,EAAAA,a;GAAAA,a,KAAAA,a","sourcesContent":["import type { AVAudioSessionPort, RouteChangeReason } from './Platform';\n\nexport interface BaseVideoViewProps {\n  android_zOrderMediaOverlay?: boolean;\n  resizeMode?: 'contain' | 'cover' | 'center';\n  mirror?: boolean;\n}\n\nexport enum SoundType {\n  DIALING = 'DIALING',\n  RINGING = 'RINGING',\n  RECONNECTING = 'RECONNECTING',\n  RECONNECTED = 'RECONNECTED',\n}\n\nexport enum AudioDeviceType {\n  EARPIECE = 'EARPIECE',\n  SPEAKERPHONE = 'SPEAKERPHONE',\n  WIRED_HEADSET = 'WIRED_HEADSET',\n  BLUETOOTH = 'BLUETOOTH',\n}\n\nexport enum VideoDevicePosition {\n  FRONT = 'FRONT',\n  BACK = 'BACK',\n  UNSPECIFIED = 'UNSPECIFIED',\n}\n\nexport enum RecordingStatus {\n  NONE = 'NONE',\n  RECORDING = 'RECORDING',\n}\n\nexport enum RecordingType {\n  /** An option to record the video and audio of the remote user */\n  REMOTE_AUDIO_AND_VIDEO = 'REMOTE_AUDIO_AND_VIDEO',\n\n  /** An option to record the audio of the remote user. */\n  REMOTE_AUDIO_ONLY = 'REMOTE_AUDIO_ONLY',\n\n  /** An option to record both audios of the local and remote users. */\n  LOCAL_REMOTE_AUDIOS = 'LOCAL_REMOTE_AUDIOS',\n\n  /** An option to record both audios of the local and remote users, and the video of the remote user. */\n  LOCAL_AUDIO_REMOTE_AUDIO_AND_VIDEO = 'LOCAL_AUDIO_REMOTE_AUDIO_AND_VIDEO',\n\n  /** An option to record both audios of the local and remote users, and the video of the local user. */\n  LOCAL_AUDIO_AND_VIDEO_REMOTE_AUDIO = 'LOCAL_AUDIO_AND_VIDEO_REMOTE_AUDIO',\n}\n\nexport type AudioDevice = AudioDeviceType;\nexport interface VideoDevice {\n  /**\n   * device id\n   * @android deviceName\n   * @ios uniqueId\n   */\n  deviceId: string;\n  position: VideoDevicePosition;\n}\n\nexport type RecordingOptions = {\n  recordingType: RecordingType;\n  /** Used to specify the base directory path of where the recorded file will be saved **/\n  directoryPath: string;\n  // TODO: implement default fileName generator for\n  /** Used to specify a name of the recorded file. If unspecified, it will be saved as `{type}_{callId}_{timestamp}`. **/\n  fileName?: string;\n};\n\nexport type Port = {\n  type: AVAudioSessionPort;\n  name: string;\n};\nexport type AudioDeviceRoute = {\n  inputs: Port[];\n  outputs: Port[];\n};\n\nexport type AudioDeviceChangedInfo =\n  | {\n      platform: 'android';\n      data: {\n        currentAudioDevice: AudioDevice | null;\n        availableAudioDevices: AudioDevice[] | null;\n      };\n    }\n  | {\n      platform: 'ios';\n      data: {\n        reason: RouteChangeReason;\n        currentRoute: AudioDeviceRoute;\n        previousRoute: AudioDeviceRoute;\n      };\n    };\n"]}