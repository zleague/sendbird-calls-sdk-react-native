{"version":3,"sources":["Participant.ts"],"names":["Participant","get","props","_binder","_internalEvents","_roomId","localParticipant","_updateInternal","constructor","_props","participantId","user","state","enteredAt","exitedAt","duration","isAudioEnabled","isVideoEnabled","updatedAt","LocalParticipant","binder","internalEvents","roomId","nativeModule","muteMicrophone","ControllableModuleType","GROUP_CALL","emit","unmuteMicrophone","stopVideo","startVideo","switchCamera"],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport type { LocalParticipantMethods, ParticipantProperties, RoomListener } from '../types';\nimport { ControllableModuleType } from '../types';\nimport type NativeBinder from './NativeBinder';\nimport type { InternalEvents } from './Room';\n\nexport class Participant implements ParticipantProperties {\n  /** @internal **/\n  public static get(\n    props: ParticipantProperties | null,\n    _binder?: NativeBinder,\n    _internalEvents?: InternalEvents<RoomListener>,\n    _roomId?: string,\n  ) {\n    if (!props) return null;\n\n    const localParticipant = new Participant(props);\n    return localParticipant._updateInternal(props);\n  }\n\n  constructor(props: ParticipantProperties) {\n    this._props = props;\n  }\n\n  protected _props: ParticipantProperties;\n\n  private _updateInternal(props: ParticipantProperties) {\n    this._props = props;\n    return this;\n  }\n\n  public get participantId() {\n    return this._props.participantId;\n  }\n  public get user() {\n    return this._props.user;\n  }\n  public get state() {\n    return this._props.state;\n  }\n  public get enteredAt() {\n    return this._props.enteredAt;\n  }\n  public get exitedAt() {\n    return this._props.exitedAt;\n  }\n  public get duration() {\n    return this._props.duration;\n  }\n  public get isAudioEnabled() {\n    return this._props.isAudioEnabled;\n  }\n  public get isVideoEnabled() {\n    return this._props.isVideoEnabled;\n  }\n  public get updatedAt() {\n    return this._props.updatedAt;\n  }\n}\n\nexport class LocalParticipant extends Participant implements LocalParticipantMethods {\n  /** @internal **/\n  public static get(\n    props: ParticipantProperties | null,\n    binder: NativeBinder,\n    internalEvents: InternalEvents<RoomListener>,\n    roomId: string,\n  ) {\n    if (!props) return null;\n\n    return new LocalParticipant(props, binder, internalEvents, roomId);\n  }\n\n  constructor(\n    props: ParticipantProperties,\n    binder: NativeBinder,\n    internalEvents: InternalEvents<RoomListener>,\n    roomId: string,\n  ) {\n    super(props);\n    this._binder = binder;\n    this._internalEvents = internalEvents;\n    this._roomId = roomId;\n  }\n\n  private _binder: NativeBinder;\n  private _internalEvents: InternalEvents<RoomListener>;\n  private _roomId: string;\n\n  /**\n   * Mutes the audio of the local user.\n   * Will trigger {@link RoomListener.onRemoteAudioSettingsChanged} method of remote participants.\n   * If the remote user changes their audio settings, the local user will be notified via the same method.\n   *\n   * @since 1.0.0\n   */\n  public muteMicrophone = () => {\n    this._binder.nativeModule.muteMicrophone(ControllableModuleType.GROUP_CALL, this._roomId);\n\n    // NOTE: native doesn't have onLocalAudioSettingsChanged event\n    this._props.isAudioEnabled = false;\n    this._internalEvents.emit('onPropertyUpdatedManually', this);\n  };\n\n  /**\n   * Unmutes the audio of the local user.\n   * Will trigger {@link RoomListener.onRemoteAudioSettingsChanged} method of remote participants.\n   * If the remote user changes their audio settings, the local user will be notified via the same method.\n   *\n   * @since 1.0.0\n   */\n  public unmuteMicrophone = () => {\n    this._binder.nativeModule.unmuteMicrophone(ControllableModuleType.GROUP_CALL, this._roomId);\n\n    // NOTE: native doesn't have onLocalAudioSettingsChanged event\n    this._props.isAudioEnabled = true;\n    this._internalEvents.emit('onPropertyUpdatedManually', this);\n  };\n\n  /**\n   * Unmutes the audio of the local user.\n   * Will trigger {@link RoomListener.onRemoteVideoSettingsChanged} method of remote participants.\n   * If the remote user changes their video settings, the local user will be notified via the same method.\n   *\n   * @since 1.0.0\n   */\n  public stopVideo = () => {\n    this._binder.nativeModule.stopVideo(ControllableModuleType.GROUP_CALL, this._roomId);\n\n    // NOTE: native doesn't have onLocalAudioSettingsChanged event\n    this._props.isVideoEnabled = false;\n    this._internalEvents.emit('onPropertyUpdatedManually', this);\n  };\n\n  /**\n   * Unmutes the audio of the local user.\n   * Will trigger {@link RoomListener.onRemoteVideoSettingsChanged} method of remote participants.\n   * If the remote user changes their video settings, the local user will be notified via the same method.\n   *\n   * @since 1.0.0\n   */\n  public startVideo = () => {\n    this._binder.nativeModule.startVideo(ControllableModuleType.GROUP_CALL, this._roomId);\n\n    // NOTE: native doesn't have onLocalAudioSettingsChanged event\n    this._props.isVideoEnabled = true;\n    this._internalEvents.emit('onPropertyUpdatedManually', this);\n  };\n\n  /**\n   * Toggles the selection between the front and the back camera.\n   *\n   * on Android, In case of more than two cameras, the next camera will be selected.\n   * If the last camera is already selected, the first one will be selected again.\n   *\n   * @since 1.0.0\n   */\n  public switchCamera = () => {\n    return this._binder.nativeModule.switchCamera(ControllableModuleType.GROUP_CALL, this._roomId);\n  };\n}\n"]}