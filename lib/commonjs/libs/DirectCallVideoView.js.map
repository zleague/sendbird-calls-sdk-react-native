{"version":3,"sources":["DirectCallVideoView.tsx"],"names":["MODULE_NAME","NativeViewModule","Error","LINKING_ERROR","DirectCallVideoView","React","PureComponent","handle","nodeHandle","ref","current","validProps","__DEV__","props","viewType","android_zOrderMediaOverlay","mirror","resizeMode","callId","style","rest","zOrderMediaOverlay","videoViewId","render"],"mappings":";;;;;;;AACA;;AACA;;AAGA;;;;;;;;;;AAEA,MAAMA,WAAW,GAAG,yBAApB;AACA,MAAMC,gBAAgB,GAAG,yCAAuBD,WAAvB,CAAzB;AACA,IAAI,CAACC,gBAAL,EAAuB,MAAM,IAAIC,KAAJ,CAAUC,wBAAV,CAAN;;AAMR,MAAMC,mBAAN,SAAkCC,eAAMC,aAAxC,CAAgF;AAAA;AAAA;;AAAA,8CAC/E,uBAD+E;AAAA;;AAG3E,MAANC,MAAM,GAAG;AACnB,UAAMC,UAAU,GAAG,iCAAe,KAAKC,GAAL,CAASC,OAAxB,CAAnB;;AACA,QAAIF,UAAU,IAAI,IAAd,IAAsBA,UAAU,KAAK,CAAC,CAA1C,EAA6C;AAC3C,YAAM,IAAIN,KAAJ,CAAU,wBAAV,CAAN;AACD;;AACD,WAAOM,UAAP;AACD;;AACqB,MAAVG,UAAU,GAAG;AACvB,QAAIC,OAAJ,EAAa;AACX,UAAI,KAAKC,KAAL,CAAWC,QAAX,KAAwB,OAAxB,IAAmC,KAAKD,KAAL,CAAWC,QAAX,KAAwB,QAA/D,EAAyE;AACvE,cAAM,IAAIZ,KAAJ,CAAU,6CAAV,CAAN;AACD;AACF;;AAED,UAAM;AACJa,MAAAA,0BAA0B,GAAG,KADzB;AAEJC,MAAAA,MAAM,GAAG,KAAKH,KAAL,CAAWC,QAAX,KAAwB,OAF7B;AAGJG,MAAAA,UAAU,GAAG,OAHT;AAIJH,MAAAA,QAJI;AAKJI,MAAAA,MALI;AAMJC,MAAAA,KANI;AAOJ,SAAGC;AAPC,QAQF,KAAKP,KART;AAUA,WAAO;AAAEQ,MAAAA,kBAAkB,EAAEN,0BAAtB;AAAkDC,MAAAA,MAAlD;AAA0DC,MAAAA,UAA1D;AAAsEH,MAAAA,QAAtE;AAAgFI,MAAAA,MAAhF;AAAwFC,MAAAA,KAAxF;AAA+F,SAAGC;AAAlG,KAAP;AACD;;AAEqB,MAAXE,WAAW,GAAG;AACvB,WAAO,KAAKf,MAAZ;AACD;;AAEDgB,EAAAA,MAAM,GAAG;AACP,wBAAO,6BAAC,gBAAD;AAAkB,MAAA,GAAG,EAAE,KAAKd;AAA5B,OAA4C,KAAKE,UAAjD,EAAP;AACD;;AApC4F,C,CAuC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { createRef } from 'react';\nimport { ViewProps, findNodeHandle, requireNativeComponent } from 'react-native';\n\nimport { BaseVideoViewProps } from '../types';\nimport { LINKING_ERROR } from '../utils/constants';\n\nconst MODULE_NAME = 'RNSBDirectCallVideoView';\nconst NativeViewModule = requireNativeComponent(MODULE_NAME);\nif (!NativeViewModule) throw new Error(LINKING_ERROR);\n\nexport interface DirectCallVideoViewProps extends BaseVideoViewProps, ViewProps {\n  viewType: 'local' | 'remote';\n  callId?: string;\n}\nexport default class DirectCallVideoView extends React.PureComponent<DirectCallVideoViewProps> {\n  private ref = createRef<any>();\n\n  private get handle() {\n    const nodeHandle = findNodeHandle(this.ref.current as any);\n    if (nodeHandle == null || nodeHandle === -1) {\n      throw new Error('Cannot found VideoView');\n    }\n    return nodeHandle;\n  }\n  private get validProps() {\n    if (__DEV__) {\n      if (this.props.viewType !== 'local' && this.props.viewType !== 'remote') {\n        throw new Error('DirectCallVideoView: Invalid ViewType props');\n      }\n    }\n\n    const {\n      android_zOrderMediaOverlay = false,\n      mirror = this.props.viewType === 'local',\n      resizeMode = 'cover',\n      viewType,\n      callId,\n      style,\n      ...rest\n    } = this.props;\n\n    return { zOrderMediaOverlay: android_zOrderMediaOverlay, mirror, resizeMode, viewType, callId, style, ...rest };\n  }\n\n  public get videoViewId() {\n    return this.handle;\n  }\n\n  render() {\n    return <NativeViewModule ref={this.ref as any} {...this.validProps} />;\n  }\n}\n\n// const DirectCallVideoView = React.forwardRef(function DirectCallVideoView(props: Props, ref) {\n//   const _nativeRef = useRef<any>();\n//\n//   const validProps = useMemo(() => {\n//     if (props.viewType !== 'local' && props.viewType !== 'remote') {\n//       throw new Error('DirectCallVideoView: Invalid ViewType props');\n//     }\n//\n//     return { ...props, style: { width: '100%', height: '100%' } };\n//   }, [props.viewType]);\n//\n//   useImperativeHandle(\n//     ref,\n//     () => {\n//       const videoViewId = findNodeHandle(_nativeRef.current);\n//       if (!videoViewId) throw new Error('Cannot found VideoView');\n//\n//       return { videoViewId };\n//     },\n//     [],\n//   );\n//\n//   return (\n//     <View style={props.style}>\n//       <NativeViewModule ref={_nativeRef} {...validProps} />\n//     </View>\n//   );\n// });\n//\n// export default DirectCallVideoView;\n"]}